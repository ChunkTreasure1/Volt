#pragma once

#include <optick.h>
#include <Tracy.hpp>

#define VT_PROFILING_METHOD_NONE 0
#define VT_PROFILING_METHOD_OPTICK 1
#define VT_PROFILING_METHOD_TRACY 2

#define VT_PROFILING_METHOD VT_PROFILING_METHOD_NONE

#ifdef VT_ENABLE_GPU_PROFILING

#define VT_PROFILE_GPU_CONTEXT(COMMANDLIST) OPTICK_GPU_CONTEXT(COMMANDLIST)
#define VT_PROFILE_GPU_FLIP(SWAPCHAIN) OPTICK_GPU_FLIP(SWAPCHAIN)
#define VT_PROFILE_GPU_EVENT(NAME) OPTICK_GPU_EVENT(NAME)

#else

#define VT_PROFILE_GPU_CONTEXT(COMMANDLIST)
#define VT_PROFILE_GPU_FLIP(SWAPCHAIN)
#define VT_PROFILE_GPU_EVENT(NAME)

#endif

#if VT_PROFILING_METHOD == VT_PROFILING_METHOD_OPTICK

#define VT_PROFILE_FRAME(...) OPTICK_FRAME(__VA_ARGS__)
#define VT_PROFILE_FUNCTION(...)  OPTICK_EVENT(__VA_ARGS__)
#define VT_PROFILE_TAG(NAME, ...) OPTICK_TAG(NAME, __VA_ARGS__)
#define VT_PROFILE_SCOPE(NAME) OPTICK_EVENT_DYNAMIC(NAME)
#define VT_PROFILE_THREAD(...) OPTICK_THREAD(__VA_ARGS__)
#define VT_PROFILE_CATEGORY(...) OPTICK_CATEGORY(__VA_ARGS__)

#define VT_PROFILE_ALLOC(ptr, size)
#define VT_PROFILE_FREE(ptr)

#elif VT_PROFILING_METHOD == VT_PROFILING_METHOD_TRACY

#define VT_PROFILE_FRAME(...) FrameMark
#define VT_PROFILE_FUNCTION(...)  ZoneTransient(___tracy_scoped_zone, true)
#define VT_PROFILE_TAG(NAME, ...)
#define VT_PROFILE_SCOPE(NAME) ZoneTransientN(__tracyScope, NAME, true)
#define VT_PROFILE_THREAD(...) tracy::SetThreadName(__VA_ARGS__)
#define VT_PROFILE_CATEGORY(...)

#define VT_PROFILE_ALLOC(ptr, size) TracyAlloc(ptr, size)
#define VT_PROFILE_FREE(ptr) TracyFree(ptr)

#else

#define VT_PROFILE_FRAME(...)
#define VT_PROFILE_FUNCTION(...)
#define VT_PROFILE_TAG(NAME, ...)
#define VT_PROFILE_SCOPE(NAME)
#define VT_PROFILE_THREAD(...)
#define VT_PROFILE_CATEGORY(...)

#define VT_PROFILE_ALLOC(ptr, size)
#define VT_PROFILE_FREE(ptr)

#endif
